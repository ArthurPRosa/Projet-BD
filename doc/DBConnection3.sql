CREATE TABLE Categorie (
    nomCategorie VARCHAR(100),
    PRIMARY KEY(nomCategorie)
);

CREATE TABLE APourMere(
    nomCategorieFille VARCHAR(100) REFERENCES Categorie (nomCategorie),
    nomCategorieMere VARCHAR(100) REFERENCES Categorie (nomCategorie),
    PRIMARY KEY (nomCategorieFille)
);

CREATE TABLE EstCategorieDe (
    emailRest VARCHAR(320) REFERENCES Restaurant (emailRest),
    nomCategorie VARCHAR(100) REFERENCES Categorie (nomCategorie),
    PRIMARY KEY(emailRest, nomCategorie)
);

CREATE TABLE Restaurant (
    emailRest VARCHAR(320),
    nomRest VARCHAR(100),
    telRest VARCHAR(20),
    adresseRest VARCHAR(100),
    presentation VARCHAR(500),
    capaciteMax INT,
    noteRest INT,
    PRIMARY KEY (emailRest)
);

CREATE TABLE Eval (
    dateEval DATE,
    heureEval TIME,
    avis VARCHAR(500),
    note INT,
    PRIMARY KEY (dateEval, heureEval, avis, note)
);

CREATE TABLE Compte (
    idCompte INT GENERATED BY DEFAULT AS IDENTITY,
    PRIMARY KEY (idCompte)
);

CREATE TABLE Commande (
    dateCommande DATE,
    heureCommande TIME,
    idCompte INT REFERENCES Compte (idCompte),
    emailRest VARCHAR(320) REFERENCES Restaurant (emailRest),
    prixCommande INT,
    statut VARCHAR(30) CHECK (statut IN ('attente','validee','disponible','livraison','annuleeClient','annuleeRest')),
    PRIMARY KEY (dateCommande, heureCommande, idCompte, emailRest)
);

CREATE TABLE SurPlace (
    dateCommande DATE REFERENCES Commande (dateCommande),
    heureCommande TIME REFERENCES Commande (heureCommande),
    idCompte INT REFERENCES Comptes (idCompte),
    emailRest VARCHAR(320) REFERENCES Restaurant (emailRest),
    adresseLivraison VARCHAR(100),
    infos VARCHAR(500),
    heureLivraison TIME,
    PRIMARY KEY(dateCommande, heureCommande, idCompte, emailRest)
);

CREATE TABLE Livraison (
    dateCommande DATE REFERENCES Commande (dateCommande),
    heureCommande TIME REFERENCES Commande (heureCommande),
    idCompte INT REFERENCES Comptes (idCompte),
    emailRest VARCHAR(320) REFERENCES Restaurant (emailRest),
    nbPersonne INT,
    heureArrivee TIME,
    PRIMARY KEY(dateCommande, heureCommande, idCompte, emailRest)
);

CREATE TABLE PossedeEvaluation (
    dateCommande DATE REFERENCES Commande (dateCommande),
    heureCommande TIME REFERENCES Commande (heureCommande),
    idCompte INT REFERENCES Comptes (idCompte),
    emailRest VARCHAR(320) REFERENCES Restaurant (emailRest),
    dateEval DATE REFERENCES Eval (dateEval),
    heureEval TIME REFERENCES Eval (heureEval),
    PRIMARY KEY (dateCommande, heureCommande, idCompte, emailRest, dateEval, heureEval)
);

CREATE TABLE Client (
    emailClient VARCHAR(320),
    mdp VARCHAR(40),
    nomClient VARCHAR(50),
    prenomClient VARCHAR(50),
    adresseClient VARCHAR(100),
    idCompte INT REFERENCES Compte (idCompte) NOT NULL,
    PRIMARY KEY (emailClient)
);

CREATE TABLE Horaire (
    jour VARCHAR(8),
    heureOuverture TIME,
    heureFermeture TIME,
    PRIMARY KEY (jour, heureOuverture, heureFermeture)
);

CREATE TABLE PossedeHoraires (
    jour VARCHAR(8) REFERENCES Horaire (jour),
    heureOuverture TIME REFERENCES Horaire (heureOuverture),
    heureFermeture TIME REFERENCES Horaire (heureFermeture),
    emailRest VARCHAR(320) REFERENCES Restaurant (emailRest),
    PRIMARY KEY (jour, heureOuverture, heureFermeture, emailRest)
);

CREATE TABLE Plat (
    emailRest VARCHAR(320) REFERENCES Restaurant (emailRest),
    nomPlat VARCHAR(100),
    prix INT,
    descPlat VARCHAR(500),
    PRIMARY KEY (emailRest, nomPlat)
);

CREATE TABLE FaitPartieDe (
    dateCommande DATE REFERENCES Commande (dateCommande),
    heureCommande TIME REFERENCES Commande (heureCommande),
    idCompte INT REFERENCES Compte (idCompte),
    emailRest VARCHAR(320) REFERENCES Restaurant (emailRest),
    nomPlat VARCHAR(100) REFERENCES Plat (nomPlat),
    quantiteCommandee INT,
    PRIMARY KEY (dateCommande, heureCommande, idCompte, emailRest, nomPlat)
);

CREATE TABLE Contient (
    emailRest VARCHAR(320) REFERENCES Restaurant (emailRest),
    nomPlat VARCHAR(100) REFERENCES Plat (nomPlat),
    nomAllergene VARCHAR(100),
    PRIMARY KEY (emailRest, nomPlat, nomAllergene)
);


DROP TABLE PossedeEvaluation;
DROP TABLE Eval;
DROP TABLE Client;
DROP TABLE Livraison;
DROP TABLE SurPlace;
DROP TABLE Contient;
DROP TABLE FaitPartieDe;
DROP TABLE Plat;
// todo

// -------------- RESTAURANT --------------

//Lister les restaurants
SELECT * 
FROM RESTAURANT R, POSSEDEHORAIRES P, ESTDELACATEGORIE E
WHERE R.emailRest = P.emailRest AND R.emailRest = E.emailRest

// ajouter un restaurant
INSERT INTO RESTAURANT VALUES ()

// -------------- PLAT --------------

// Lister les Plats de un restaurant
SELECT *
FROM PLAT
WHERE emailREst = user.input

// ajouter un plat
INSERT INTO PLAT VALUES ()

// -------------- ALLERGENE --------------

// Lister les allergènes
SELECT *
FROM ALLERGENE

// Lister les allergènes dun certain plat
SELECT *
FROM CONTIENT
WHERE emailREst = user.input AND nomPlat = user.input

// ajouter un allergene
INSERT INTO ALLERGENE VALUES ()

//ajouter un allergene dans un plat
INSERT INTO CONTIENT VALUES ()

// -------------- CATEGORIE --------------


// Lister les catégories
SELECT *
FROM CATEGORIE

// Lister les catégories de un restaurant
SELECT * 
FROM 

// ajouter un restaurant
INSERT INTO PLAT VALUES ()

//ajouter une catégorie
INSERT INTO CATEGORIE VALUES ()
//Si elle a une mere, 
INSERT INTO APOURMERE VALUES ()

//ajouter une catégorie pour un restaurant
INSERT INTO CATEGORIE VALUES ()

// -------------- USER/COMPTE --------------


//Lister les utilisateurs
SELECT *
FROM CLIENT

//Lister les comptes
SELECT *
FROM COMPTE

// -------------- COMMANDE --------------


// Lister les commandes
SELECT *
FROM COMMANDE

// Lister les commandes par restaurant
SELECT *
FROM COMMANDE C, RESTAURANT R
WHERE C.emailRest = R.emailRest

// Lister les commandes par idCompte
SELECT *
FROM COMMANDE C, COMPTE CO
WHERE C.idCompte = CO.idCompte

// Lister les commandes par statut
SELECT *
FROM COMMANDE
WHERE statut = user.input

// ajouter une commande
INSERT INTO COMMANDE VALUES ()

// -------------- EVALUATION --------------

//Lister les évaluations
SELECT *
FROM EVAL

//Lister les évaluations par restaurant
SELECT *
FROM POSSEDEEVALUATION
WHERE emailRest = user.input

// -------------- HORAIRE --------------

//Lister les horaires
SELECT *
FROM HORAIRE






